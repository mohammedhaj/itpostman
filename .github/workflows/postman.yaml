name: Workflow Postman Collection with Slack Notifications

on: ['push']

jobs:
    postman-github:
      runs-on: self-hosted

      steps:
        - name: Execution Postman Collection
          uses: matt-ball/newman-action@master
          with:
            apiKey: ${{ secrets.postmanApiKey }}
            collection: 19980843-e1ea76f0-dc90-4e50-9992-f68ac667e706
        - name: Install NodeJS
          if: success() || failure()
          uses: actions/setup-node@v3
          with:
            node-version: 16
        - name: Install dependency
          if: success() || failure()
          run: |
            npm i  newman --location=global
            npm i  newman-reporter-allure  --location=global
            npm i  newman-reporter-htmlextra --location=global
            npm i  newman-reporter-slackreporter --location=global

        - name: Generate Allure report
          if: success() || failure()
          run: |
            newman run  https://api.getpostman.com/collections/19980843-e1ea76f0-dc90-4e50-9992-f68ac667e706?apikey=${{ secrets.postmanApiKey }} \
            -r slackreporter,allure --reporter-allure-export allure-results --reporter-slackreporter-webhookurl ${{ secrets.SLACK_WEBHOOK_URL }}  
            wget https://github.com/allure-framework/allure2/releases/download/2.18.1/allure_2.18.1-1_all.deb
            sudo dpkg -i allure_2.18.1-1_all.deb
            allure generate --clean
        - name: Output the results
          if: success() || failure()
          uses: actions/upload-artifact@v2
          with:
            name: Allure-Results
            path: allure-results
        - name:  Push new reports
          if: always()
          run: sudo cp -a allure-report/. /mnt/c/Users/medha/Desktop/itecor/allure/allure-report-postamn/
        # - name: Generate html report
        #   if: success() || failure()
        #   run: |
        #     newman run  https://api.getpostman.com/collections/19980843-e1ea76f0-dc90-4e50-9992-f68ac667e706?apikey=${{ secrets.postmanApiKey }} \
        #      -r slackreporter,htmlextra --reporter-htmlextra-export testArtifactsHTML/htmlreport.html 
        # # Upload the reports to TestArtifacts directory
        # - name: Output the results
        #   if: always()
        #   uses: actions/upload-artifact@v2
        #   with:
        #     name: Reports
        #     path: testArtifactsHTML